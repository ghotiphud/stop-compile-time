{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_name":"regex","crate_root":".cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src","external_crates":[{"name":"utf8_ranges","num":20,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"void","num":17,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"libc","num":14,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"panic_unwind","num":11,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"unwind","num":8,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"std_unicode","num":5,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"core","num":2,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"regex_syntax","num":19,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"unreachable","num":16,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"memchr","num":13,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"alloc_jemalloc","num":10,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"libc","num":7,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"alloc","num":4,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"std","num":1,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"lazy_static","num":18,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"thread_local","num":15,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"aho_corasick","num":12,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"compiler_builtins","num":9,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"alloc_system","num":6,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"},{"name":"rand","num":3,"file_name":"/home/yale/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs"}],"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":22110,"line_start":11,"line_end":648,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17339,"byte_end":17344,"line_start":503,"line_end":503,"column_start":16,"column_end":21},"name":"Error","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17375,"byte_end":17376,"line_start":504,"line_end":504,"column_start":30,"column_end":31},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17411,"byte_end":17412,"line_start":505,"line_end":505,"column_start":34,"column_end":35},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17439,"byte_end":17440,"line_start":506,"line_end":506,"column_start":26,"column_end":27},"name":"*","value":""},{"kind":"Use","ref_id":{"krate":0,"index":756},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17460,"byte_end":17469,"line_start":507,"line_end":507,"column_start":19,"column_end":28},"name":"Locations","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21057,"byte_end":21058,"line_start":602,"line_end":602,"column_start":32,"column_end":33},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21095,"byte_end":21096,"line_start":603,"line_end":603,"column_start":36,"column_end":37},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21120,"byte_end":21121,"line_start":604,"line_end":604,"column_start":23,"column_end":24},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21150,"byte_end":21151,"line_start":605,"line_end":605,"column_start":28,"column_end":29},"name":"*","value":""},{"kind":"Use","ref_id":{"krate":0,"index":756},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21175,"byte_end":21184,"line_start":606,"line_end":606,"column_start":23,"column_end":32},"name":"Locations","value":""},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21846,"byte_end":21854,"line_start":641,"line_end":641,"column_start":22,"column_end":30},"name":"Compiler","value":""},{"kind":"Use","ref_id":{"krate":0,"index":1181},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21971,"byte_end":21986,"line_start":644,"line_end":644,"column_start":23,"column_end":38},"name":"LiteralSearcher","value":""},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22069,"byte_end":22075,"line_start":646,"line_end":646,"column_start":24,"column_end":30},"name":"Plugin","value":""},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22101,"byte_end":22107,"line_start":647,"line_end":647,"column_start":25,"column_end":31},"name":"_Regex","value":""}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":22110,"line_start":11,"line_end":648,"column_start":1,"column_end":2},"name":"","qualname":"::","value":".cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":56},{"krate":0,"index":67},{"krate":0,"index":164},{"krate":0,"index":271},{"krate":0,"index":281},{"krate":0,"index":393},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":492},{"krate":0,"index":551},{"krate":0,"index":576},{"krate":0,"index":615},{"krate":0,"index":620},{"krate":0,"index":734},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":791},{"krate":0,"index":919},{"krate":0,"index":929},{"krate":0,"index":947}],"decl_id":null,"docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16920,"byte_end":16942,"line_start":490,"line_end":490,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21018,"byte_end":21023,"line_start":601,"line_end":601,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bytes","value":".cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"Match regular expressions on arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":24011,"byte_end":24022,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"should_exec","qualname":"::backtrack::should_exec","value":"fn (num_insts: usize, text_len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the given regex and input should be executed by this\n engine with reasonable memory usage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":965},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":24501,"byte_end":24508,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"Bounded","qualname":"::backtrack::Bounded","value":"Bounded {  }","parent":null,"children":[{"krate":0,"index":2147484056},{"krate":0,"index":2147484057},{"krate":0,"index":2147484058},{"krate":0,"index":2147484059},{"krate":0,"index":2147484060}],"decl_id":null,"docs":" A backtracking matching engine.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":968},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":24785,"byte_end":24790,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"Cache","qualname":"::backtrack::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484071},{"krate":0,"index":2147484072}],"decl_id":null,"docs":" Shared cached state between multiple invocations of a backtracking engine\n in the same thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":24924,"byte_end":24927,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (_prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25714,"byte_end":25718,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"exec","qualname":"<Bounded<'a, 'm, 'r, 's, I>>::exec","value":"fn (prog: &'r Program, cache: &ProgramCache, matches: &'m mut [bool], slots: &'s mut [Slot], input: I, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":34242,"byte_end":34251,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"next_utf8","qualname":"::utf8::next_utf8","value":"fn (text: &[u8], i: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest possible index of the next valid UTF-8 sequence\n starting after `i`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":34779,"byte_end":34790,"line_start":47,"line_end":47,"column_start":8,"column_end":19},"name":"encode_utf8","qualname":"::utf8::encode_utf8","value":"fn (character: char, dst: &mut [u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given Unicode character to `dst` as a single UTF-8 sequence.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":34742,"byte_end":34761,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":34762,"byte_end":34771,"line_start":46,"line_end":46,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":36225,"byte_end":36236,"line_start":83,"line_end":83,"column_start":8,"column_end":19},"name":"decode_utf8","qualname":"::utf8::decode_utf8","value":"fn (src: &[u8]) -> Option<(char, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Decode a single UTF-8 sequence into a single Unicode codepoint from `src`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":36208,"byte_end":36217,"line_start":82,"line_end":82,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":38569,"byte_end":38585,"line_start":154,"line_end":154,"column_start":8,"column_end":24},"name":"decode_last_utf8","qualname":"::utf8::decode_last_utf8","value":"fn (src: &[u8]) -> Option<(char, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Like decode_utf8, but decodes the last UTF-8 sequence in `src` instead of\n the first.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":44129,"byte_end":44137,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Compiler","qualname":"::compile::Compiler","value":"Compiler {  }","parent":null,"children":[{"krate":0,"index":2147483665},{"krate":0,"index":2147483666},{"krate":0,"index":2147483667},{"krate":0,"index":2147483668},{"krate":0,"index":2147483669},{"krate":0,"index":2147483670},{"krate":0,"index":2147483671},{"krate":0,"index":2147483672}],"decl_id":null,"docs":" A compiler translates a regular expression AST to a sequence of\n instructions. The sequence of instructions represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":44548,"byte_end":44551,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<Compiler>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":45146,"byte_end":45156,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"size_limit","qualname":"<Compiler>::size_limit","value":"fn (mut self, size_limit: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":45900,"byte_end":45905,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Compiler>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":46188,"byte_end":46197,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Compiler>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":46680,"byte_end":46683,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"dfa","qualname":"<Compiler>::dfa","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":46918,"byte_end":46925,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Compiler>::reverse","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":47279,"byte_end":47286,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"compile","qualname":"<Compiler>::compile","value":"fn (mut self, exprs: &[Expr]) -> result::Result<Program, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":83759,"byte_end":83767,"line_start":66,"line_end":66,"column_start":8,"column_end":16},"name":"can_exec","qualname":"::dfa::can_exec","value":"fn (insts: &Program) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if the given program can be executed by a DFA.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1025},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":84730,"byte_end":84735,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"Cache","qualname":"::dfa::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484114},{"krate":0,"index":2147484115},{"krate":0,"index":2147484116}],"decl_id":null,"docs":" A reusable cache of DFA states.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":88707,"byte_end":88710,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"Fsm","qualname":"::dfa::Fsm","value":"Fsm {  }","parent":null,"children":[{"krate":0,"index":2147484126},{"krate":0,"index":2147484127},{"krate":0,"index":2147484128},{"krate":0,"index":2147484129},{"krate":0,"index":2147484130},{"krate":0,"index":2147484131},{"krate":0,"index":2147484132}],"decl_id":null,"docs":" Fsm encapsulates the actual execution of the DFA.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484135},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":90539,"byte_end":90544,"line_start":219,"line_end":219,"column_start":5,"column_end":10},"name":"Match","qualname":"::dfa::Result::Match","value":"Result::Match(T)","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484137},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":90553,"byte_end":90560,"line_start":220,"line_end":220,"column_start":5,"column_end":12},"name":"NoMatch","qualname":"::dfa::Result::NoMatch","value":"Result::NoMatch(usize)","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484139},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":90573,"byte_end":90577,"line_start":221,"line_end":221,"column_start":5,"column_end":9},"name":"Quit","qualname":"::dfa::Result::Quit","value":"Result::Quit","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1041},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":90523,"byte_end":90529,"line_start":218,"line_end":218,"column_start":10,"column_end":16},"name":"Result","qualname":"::dfa::Result","value":"Result::{Match, NoMatch, Quit}","parent":null,"children":[{"krate":0,"index":2147484135},{"krate":0,"index":2147484137},{"krate":0,"index":2147484139}],"decl_id":null,"docs":" The result of running the DFA.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":90673,"byte_end":90681,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Result<T>>::is_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":90967,"byte_end":90970,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"map","qualname":"<Result<T>>::map","value":"fn <U, F> (self, mut f: F) -> Result<U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":97609,"byte_end":97612,"line_start":423,"line_end":423,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":98719,"byte_end":98726,"line_start":457,"line_end":457,"column_start":12,"column_end":19},"name":"forward","qualname":"<Fsm<'a>>::forward","value":"fn (prog: &'a Program, cache: &ProgramCache, quit_after_match: bool, text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":99774,"byte_end":99781,"line_start":490,"line_end":490,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Fsm<'a>>::reverse","value":"fn (prog: &'a Program, cache: &ProgramCache, quit_after_match: bool, text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":100853,"byte_end":100865,"line_start":523,"line_end":523,"column_start":12,"column_end":24},"name":"forward_many","qualname":"<Fsm<'a>>::forward_many","value":"fn (prog: &'a Program, cache: &ProgramCache, matches: &mut [bool], text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484157},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":154421,"byte_end":154427,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::error::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" A syntax error.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484159},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":154547,"byte_end":154561,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"CompiledTooBig","qualname":"::error::Error::CompiledTooBig","value":"Error::CompiledTooBig(usize)","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" The compiled program exceeded the set size limit.\n The argument is the size limit imposed.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484161},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":154848,"byte_end":154863,"line_start":29,"line_end":29,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1090},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":154385,"byte_end":154390,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Syntax, CompiledTooBig, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":2147484157},{"krate":0,"index":2147484159},{"krate":0,"index":2147484161}],"decl_id":null,"docs":" An error that occurred during parsing or compiling a regular expression.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":156959,"byte_end":156963,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Exec","qualname":"::exec::Exec","value":"Exec {  }","parent":null,"children":[{"krate":0,"index":2147483710},{"krate":0,"index":2147483711}],"decl_id":null,"docs":" Exec manages the execution of a regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":157330,"byte_end":157340,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"ExecNoSync","qualname":"::exec::ExecNoSync","value":"ExecNoSync {  }","parent":null,"children":[{"krate":0,"index":2147484162},{"krate":0,"index":2147484163}],"decl_id":null,"docs":" ExecNoSync is like Exec, except it embeds a reference to a cache. This\n means it is no longer Sync, but we can now avoid the overhead of\n synchronization to fetch the cache.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":157575,"byte_end":157588,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"ExecNoSyncStr","qualname":"::exec::ExecNoSyncStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" ExecNoSyncStr is like ExecNoSync, but matches on &str instead of &[u8].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":159294,"byte_end":159305,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"ExecBuilder","qualname":"::exec::ExecBuilder","value":"ExecBuilder {  }","parent":null,"children":[{"krate":0,"index":2147483715},{"krate":0,"index":2147483716},{"krate":0,"index":2147483717},{"krate":0,"index":2147483718}],"decl_id":null,"docs":" Facilitates the construction of an executor by exposing various knobs\n to control how a regex is executed and what kinds of resources it's\n permitted to use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":159907,"byte_end":159910,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecBuilder>::new","value":"fn (re: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":160236,"byte_end":160244,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"new_many","qualname":"<ExecBuilder>::new_many","value":"fn <I, S> (res: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":160544,"byte_end":160555,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"new_options","qualname":"<ExecBuilder>::new_options","value":"fn (opts: RegexOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":161053,"byte_end":161062,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"automatic","qualname":"<ExecBuilder>::automatic","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":161377,"byte_end":161380,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"nfa","qualname":"<ExecBuilder>::nfa","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":161871,"byte_end":161891,"line_start":173,"line_end":173,"column_start":12,"column_end":32},"name":"bounded_backtracking","qualname":"<ExecBuilder>::bounded_backtracking","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":162459,"byte_end":162464,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ExecBuilder>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":162735,"byte_end":162744,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<ExecBuilder>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":162867,"byte_end":162874,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"unicode","qualname":"<ExecBuilder>::unicode","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":165748,"byte_end":165753,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"build","qualname":"<ExecBuilder>::build","value":"fn (self) -> Result<Exec, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":190820,"byte_end":190835,"line_start":994,"line_end":994,"column_start":12,"column_end":27},"name":"many_matches_at","qualname":"<ExecNoSync<'c>>::many_matches_at","value":"fn (&self, matches: &mut [bool], text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":192580,"byte_end":192596,"line_start":1048,"line_end":1048,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSync<'c>>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":192725,"byte_end":192741,"line_start":1054,"line_end":1054,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSyncStr<'c>>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":192940,"byte_end":192948,"line_start":1062,"line_end":1062,"column_start":12,"column_end":20},"name":"searcher","qualname":"<Exec>::searcher","value":"fn (&self) -> ExecNoSync","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":193339,"byte_end":193351,"line_start":1072,"line_end":1072,"column_start":12,"column_end":24},"name":"searcher_str","qualname":"<Exec>::searcher_str","value":"fn (&self) -> ExecNoSyncStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":193477,"byte_end":193487,"line_start":1077,"line_end":1077,"column_start":12,"column_end":22},"name":"into_regex","qualname":"<Exec>::into_regex","value":"fn (self) -> re_unicode::Regex","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":193618,"byte_end":193632,"line_start":1082,"line_end":1082,"column_start":12,"column_end":26},"name":"into_regex_set","qualname":"<Exec>::into_regex_set","value":"fn (self) -> re_set::unicode::RegexSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":193807,"byte_end":193822,"line_start":1087,"line_end":1087,"column_start":12,"column_end":27},"name":"into_byte_regex","qualname":"<Exec>::into_byte_regex","value":"fn (self) -> re_bytes::Regex","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":193980,"byte_end":193999,"line_start":1092,"line_end":1092,"column_start":12,"column_end":31},"name":"into_byte_regex_set","qualname":"<Exec>::into_byte_regex_set","value":"fn (self) -> re_set::bytes::RegexSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":194186,"byte_end":194199,"line_start":1098,"line_end":1098,"column_start":12,"column_end":25},"name":"regex_strings","qualname":"<Exec>::regex_strings","value":"fn (&self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":194356,"byte_end":194369,"line_start":1105,"line_end":1105,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Exec>::capture_names","value":"fn (&self) -> &[Option<String>]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":194544,"byte_end":194560,"line_start":1111,"line_end":1111,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<Exec>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":390},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":199945,"byte_end":199957,"line_start":1256,"line_end":1256,"column_start":10,"column_end":22},"name":"ProgramCache","qualname":"::exec::ProgramCache","value":"RefCell<ProgramCacheInner>","parent":null,"children":[],"decl_id":null,"docs":" ProgramCache maintains reusable allocations for each matching engine\n available to a particular program.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1117},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":200024,"byte_end":200041,"line_start":1259,"line_end":1259,"column_start":12,"column_end":29},"name":"ProgramCacheInner","qualname":"::exec::ProgramCacheInner","value":"ProgramCacheInner { pikevm, backtrack, dfa, dfa_reverse }","parent":null,"children":[{"krate":0,"index":2147484187},{"krate":0,"index":2147484188},{"krate":0,"index":2147484189},{"krate":0,"index":2147484190}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484187},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":200052,"byte_end":200058,"line_start":1260,"line_end":1260,"column_start":9,"column_end":15},"name":"pikevm","qualname":"::exec::ProgramCacheInner::pikevm","value":"pikevm::Cache","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484188},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":200083,"byte_end":200092,"line_start":1261,"line_end":1261,"column_start":9,"column_end":18},"name":"backtrack","qualname":"::exec::ProgramCacheInner::backtrack","value":"backtrack::Cache","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484189},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":200120,"byte_end":200123,"line_start":1262,"line_end":1262,"column_start":9,"column_end":12},"name":"dfa","qualname":"::exec::ProgramCacheInner::dfa","value":"dfa::Cache","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484190},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":200145,"byte_end":200156,"line_start":1263,"line_end":1263,"column_start":9,"column_end":20},"name":"dfa_reverse","qualname":"::exec::ProgramCacheInner::dfa_reverse","value":"dfa::Cache","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":398},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,112,97,110,100,46,114,115],"byte_start":200565,"byte_end":200575,"line_start":8,"line_end":8,"column_start":8,"column_end":18},"name":"expand_str","qualname":"::expand::expand_str","value":"fn (caps: &re_unicode::Captures, mut replacement: &str, dst: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,112,97,110,100,46,114,115],"byte_start":201836,"byte_end":201848,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"expand_bytes","qualname":"::expand::expand_bytes","value":"fn (caps: &re_bytes::Captures, mut replacement: &[u8], dst: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":407},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,102,114,101,113,115,46,114,115],"byte_start":207113,"byte_end":207129,"line_start":14,"line_end":14,"column_start":11,"column_end":27},"name":"BYTE_FREQUENCIES","qualname":"::freqs::BYTE_FREQUENCIES","value":"[u8; 256]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":212283,"byte_end":212290,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"InputAt","qualname":"::input::InputAt","value":"InputAt {  }","parent":null,"children":[{"krate":0,"index":2147484209},{"krate":0,"index":2147484210},{"krate":0,"index":2147484211},{"krate":0,"index":2147484212}],"decl_id":null,"docs":" Represents a location in the input.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":212272,"byte_end":212361,"line_start":25,"line_end":30,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":212462,"byte_end":212470,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"is_start","qualname":"<InputAt>::is_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":212597,"byte_end":212603,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"is_end","qualname":"<InputAt>::is_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":212849,"byte_end":212853,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"char","qualname":"<InputAt>::char","value":"fn (&self) -> Char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":212947,"byte_end":212951,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"byte","qualname":"<InputAt>::byte","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":213078,"byte_end":213081,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"len","qualname":"<InputAt>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":213185,"byte_end":213188,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"pos","qualname":"<InputAt>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":213309,"byte_end":213317,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"next_pos","qualname":"<InputAt>::next_pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":428},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":213443,"byte_end":213448,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Input","qualname":"::input::Input","value":"Input","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":213521,"byte_end":213523,"line_start":75,"line_end":75,"column_start":8,"column_end":10},"name":"at","qualname":"::input::Input::at","value":"fn (&self, i: usize) -> InputAt","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":213700,"byte_end":213709,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"next_char","qualname":"::input::Input::next_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":213890,"byte_end":213903,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"previous_char","qualname":"::input::Input::previous_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":214043,"byte_end":214057,"line_start":89,"line_end":89,"column_start":8,"column_end":22},"name":"is_empty_match","qualname":"::input::Input::is_empty_match","value":"fn (&self, at: InputAt, empty: &InstEmptyLook) -> bool","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":214164,"byte_end":214173,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"prefix_at","qualname":"::input::Input::prefix_at","value":"fn (&self, prefixes: &LiteralSearcher, at: InputAt) -> Option<InputAt>","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":214323,"byte_end":214326,"line_start":99,"line_end":99,"column_start":8,"column_end":11},"name":"len","qualname":"::input::Input::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":214407,"byte_end":214415,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::input::Input::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1150},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215159,"byte_end":215168,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"CharInput","qualname":"::input::CharInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" An input reader over characters.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215148,"byte_end":215183,"line_start":131,"line_end":131,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215287,"byte_end":215290,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<CharInput<'t>>::new","value":"fn (s: &'t [u8]) -> CharInput<'t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1156},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217730,"byte_end":217739,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"ByteInput","qualname":"::input::ByteInput","value":"ByteInput {  }","parent":null,"children":[{"krate":0,"index":2147484219},{"krate":0,"index":2147484220}],"decl_id":null,"docs":" An input reader over bytes.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217719,"byte_end":217788,"line_start":222,"line_end":225,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217893,"byte_end":217896,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<ByteInput<'t>>::new","value":"fn (text: &'t [u8], only_utf8: bool) -> ByteInput<'t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1162},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221415,"byte_end":221419,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"Char","qualname":"::input::Char","value":"","parent":null,"children":[],"decl_id":null,"docs":" An inline representation of `Option<char>`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221404,"byte_end":221425,"line_start":341,"line_end":341,"column_start":1,"column_end":22}},{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221404,"byte_end":221425,"line_start":341,"line_end":341,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221743,"byte_end":221750,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Char>::is_none","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221942,"byte_end":221950,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"len_utf8","qualname":"<Char>::len_utf8","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":222173,"byte_end":222185,"line_start":368,"line_end":368,"column_start":12,"column_end":24},"name":"is_word_char","qualname":"<Char>::is_word_char","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":222400,"byte_end":222412,"line_start":375,"line_end":375,"column_start":12,"column_end":24},"name":"is_word_byte","qualname":"<Char>::is_word_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":222752,"byte_end":222759,"line_start":386,"line_end":386,"column_start":12,"column_end":19},"name":"as_char","qualname":"<Char>::as_char","value":"fn (self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1181},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":225319,"byte_end":225334,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"LiteralSearcher","qualname":"::literals::LiteralSearcher","value":"LiteralSearcher {  }","parent":null,"children":[{"krate":0,"index":2147484228},{"krate":0,"index":2147484229},{"krate":0,"index":2147484230},{"krate":0,"index":2147484231}],"decl_id":null,"docs":" A prefix extracted from a compiled regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":225965,"byte_end":225970,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"empty","qualname":"<LiteralSearcher>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":226129,"byte_end":226137,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"prefixes","qualname":"<LiteralSearcher>::prefixes","value":"fn (lits: syntax::Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":226338,"byte_end":226346,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"suffixes","qualname":"<LiteralSearcher>::suffixes","value":"fn (lits: syntax::Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":227225,"byte_end":227233,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"complete","qualname":"<LiteralSearcher>::complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":227427,"byte_end":227431,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"find","qualname":"<LiteralSearcher>::find","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":227969,"byte_end":227979,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"find_start","qualname":"<LiteralSearcher>::find_start","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":228367,"byte_end":228375,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"find_end","qualname":"<LiteralSearcher>::find_end","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":228800,"byte_end":228804,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"iter","qualname":"<LiteralSearcher>::iter","value":"fn (&self) -> LiteralIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":229328,"byte_end":229331,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"lcp","qualname":"<LiteralSearcher>::lcp","value":"fn (&self) -> &SingleSearch","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":229467,"byte_end":229470,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"lcs","qualname":"<LiteralSearcher>::lcs","value":"fn (&self) -> &SingleSearch","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":229580,"byte_end":229588,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LiteralSearcher>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":229704,"byte_end":229707,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"len","qualname":"<LiteralSearcher>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":230060,"byte_end":230076,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<LiteralSearcher>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483771},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232737,"byte_end":232742,"line_start":246,"line_end":246,"column_start":5,"column_end":10},"name":"Empty","qualname":"::literals::LiteralIter::Empty","value":"LiteralIter::Empty","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483772},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232748,"byte_end":232753,"line_start":247,"line_end":247,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::literals::LiteralIter::Bytes","value":"LiteralIter::Bytes(&'a [u8])","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483774},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232769,"byte_end":232775,"line_start":248,"line_end":248,"column_start":5,"column_end":11},"name":"Single","qualname":"::literals::LiteralIter::Single","value":"LiteralIter::Single(&'a [u8])","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483776},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232791,"byte_end":232793,"line_start":249,"line_end":249,"column_start":5,"column_end":7},"name":"AC","qualname":"::literals::LiteralIter::AC","value":"LiteralIter::AC(&'a [syntax::Lit])","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483778},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232818,"byte_end":232826,"line_start":250,"line_end":250,"column_start":5,"column_end":13},"name":"Teddy128","qualname":"::literals::LiteralIter::Teddy128","value":"LiteralIter::Teddy128(&'a [Vec<u8>])","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":530},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232715,"byte_end":232726,"line_start":245,"line_end":245,"column_start":10,"column_end":21},"name":"LiteralIter","qualname":"::literals::LiteralIter","value":"LiteralIter::{Empty, Bytes, Single, AC, Teddy128}","parent":null,"children":[{"krate":0,"index":2147483771},{"krate":0,"index":2147483772},{"krate":0,"index":2147483774},{"krate":0,"index":2147483776},{"krate":0,"index":2147483778}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1196},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":237378,"byte_end":237390,"line_start":395,"line_end":395,"column_start":12,"column_end":24},"name":"SingleSearch","qualname":"::literals::SingleSearch","value":"SingleSearch {  }","parent":null,"children":[{"krate":0,"index":2147484245},{"krate":0,"index":2147484246},{"krate":0,"index":2147484247},{"krate":0,"index":2147484248},{"krate":0,"index":2147484249},{"krate":0,"index":2147484250}],"decl_id":null,"docs":" Provides an implementation of fast subtring search.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":239919,"byte_end":239923,"line_start":473,"line_end":473,"column_start":12,"column_end":16},"name":"find","qualname":"<SingleSearch>::find","value":"fn (&self, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":240751,"byte_end":240760,"line_start":499,"line_end":499,"column_start":12,"column_end":21},"name":"is_suffix","qualname":"<SingleSearch>::is_suffix","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":240937,"byte_end":240940,"line_start":506,"line_end":506,"column_start":12,"column_end":15},"name":"len","qualname":"<SingleSearch>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":241000,"byte_end":241008,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"char_len","qualname":"<SingleSearch>::char_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":242816,"byte_end":242819,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"Fsm","qualname":"::pikevm::Fsm","value":"Fsm {  }","parent":null,"children":[{"krate":0,"index":2147484251},{"krate":0,"index":2147484252},{"krate":0,"index":2147484253}],"decl_id":null,"docs":" An NFA simulation matching engine.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1204},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":243303,"byte_end":243308,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"Cache","qualname":"::pikevm::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484258},{"krate":0,"index":2147484259},{"krate":0,"index":2147484260}],"decl_id":null,"docs":" A cached allocation that can be reused on each execution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":244477,"byte_end":244480,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (_prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":244836,"byte_end":244840,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"exec","qualname":"<Fsm<'r, I>>::exec","value":"fn (prog: &'r Program, cache: &ProgramCache, matches: &mut [bool], slots: &mut [Slot], quit_after_match: bool, input: I, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":586},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":254691,"byte_end":254698,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"InstPtr","qualname":"::prog::InstPtr","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" InstPtr represents the index of an instruction in a regex program.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1219},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":254826,"byte_end":254833,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Program","qualname":"::prog::Program","value":"Program { insts, matches, captures, capture_name_idx, start, byte_classes, only_utf8, is_bytes, is_dfa, is_reverse, is_anchored_start, is_anchored_end, has_unicode_word_boundary, prefixes, dfa_size_limit }","parent":null,"children":[{"krate":0,"index":2147484269},{"krate":0,"index":2147484270},{"krate":0,"index":2147484271},{"krate":0,"index":2147484272},{"krate":0,"index":2147484273},{"krate":0,"index":2147484274},{"krate":0,"index":2147484275},{"krate":0,"index":2147484276},{"krate":0,"index":2147484277},{"krate":0,"index":2147484278},{"krate":0,"index":2147484279},{"krate":0,"index":2147484280},{"krate":0,"index":2147484281},{"krate":0,"index":2147484282},{"krate":0,"index":2147484283}],"decl_id":null,"docs":" Program is a sequence of instructions and various facts about thos\n instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484269},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":254903,"byte_end":254908,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"insts","qualname":"::prog::Program::insts","value":"std::vec::Vec<prog::Inst>","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" A sequence of instructions that represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484270},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":255073,"byte_end":255080,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"matches","qualname":"::prog::Program::matches","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" Pointers to each Match instruction in the sequence.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484271},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":255214,"byte_end":255222,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"captures","qualname":"::prog::Program::captures","value":"std::vec::Vec<std::option::Option<std::string::String>>","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" The ordered sequence of all capture groups extracted from the AST.\n Unnamed groups are `None`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484272},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":255315,"byte_end":255331,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"capture_name_idx","qualname":"::prog::Program::capture_name_idx","value":"std::sync::Arc<std::collections::HashMap<std::string::String, usize>>","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" Pointers to all named capture groups into `captures`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484273},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":255688,"byte_end":255693,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::Program::start","value":"usize","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" A pointer to the start instruction. This can vary depending on how\n the program was compiled. For example, programs for use with the DFA\n engine have a `.*?` inserted at the beginning of unanchored regular\n expressions. The actual starting point of the program is after the\n `.*?`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484274},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":255807,"byte_end":255819,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"byte_classes","qualname":"::prog::Program::byte_classes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" A set of equivalence classes for discriminating bytes in the compiled\n program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484275},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":255898,"byte_end":255907,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"only_utf8","qualname":"::prog::Program::only_utf8","value":"bool","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" When true, this program can only match valid UTF-8.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484276},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":256031,"byte_end":256039,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"is_bytes","qualname":"::prog::Program::is_bytes","value":"bool","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" When true, this program uses byte range instructions instead of Unicode\n range instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484277},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":256228,"byte_end":256234,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"is_dfa","qualname":"::prog::Program::is_dfa","value":"bool","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" When true, the program is compiled for DFA matching. For example, this\n implies `is_bytes` and also inserts a preceding `.*?` for unanchored\n regexes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484278},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":256340,"byte_end":256350,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"is_reverse","qualname":"::prog::Program::is_reverse","value":"bool","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" When true, the program matches text in reverse (for use only in the\n DFA).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484279},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":256432,"byte_end":256449,"line_start":52,"line_end":52,"column_start":9,"column_end":26},"name":"is_anchored_start","qualname":"::prog::Program::is_anchored_start","value":"bool","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" Whether the regex must match from the start of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484280},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":256527,"byte_end":256542,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"is_anchored_end","qualname":"::prog::Program::is_anchored_end","value":"bool","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" Whether the regex must match at the end of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484281},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":256633,"byte_end":256658,"line_start":56,"line_end":56,"column_start":9,"column_end":34},"name":"has_unicode_word_boundary","qualname":"::prog::Program::has_unicode_word_boundary","value":"bool","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" Whether this program contains a Unicode word boundary instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484282},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":256750,"byte_end":256758,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"name":"prefixes","qualname":"::prog::Program::prefixes","value":"literals::LiteralSearcher","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" A possibly empty machine for very quickly matching prefix literals.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484283},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":257585,"byte_end":257599,"line_start":74,"line_end":74,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::prog::Program::dfa_size_limit","value":"usize","parent":{"krate":0,"index":1219},"children":[],"decl_id":null,"docs":" A limit on the size of the cache that the DFA is allowed to use while\n matching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":257725,"byte_end":257728,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Program>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":258443,"byte_end":258447,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"skip","qualname":"<Program>::skip","value":"fn (&self, mut pc: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":258761,"byte_end":258775,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"leads_to_match","qualname":"<Program>::leads_to_match","value":"fn (&self, pc: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":259301,"byte_end":259314,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"needs_dotstar","qualname":"<Program>::needs_dotstar","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":259521,"byte_end":259531,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"uses_bytes","qualname":"<Program>::uses_bytes","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":259766,"byte_end":259775,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Program>::only_utf8","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":259923,"byte_end":259939,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Program>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484284},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":264820,"byte_end":264825,"line_start":270,"line_end":270,"column_start":5,"column_end":10},"name":"Match","qualname":"::prog::Inst::Match","value":"Inst::Match(usize)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" Match indicates that the program has reached a match state.","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484286},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":264955,"byte_end":264959,"line_start":273,"line_end":273,"column_start":5,"column_end":9},"name":"Save","qualname":"::prog::Inst::Save","value":"Inst::Save(InstSave)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" Save causes the program to save the current location of the input in\n the slot indicated by InstSave.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484288},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":265094,"byte_end":265099,"line_start":276,"line_end":276,"column_start":5,"column_end":10},"name":"Split","qualname":"::prog::Inst::Split","value":"Inst::Split(InstSplit)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" Split causes the program to diverge to one of two paths in the\n program, preferring goto1 in InstSplit.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484290},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":265259,"byte_end":265268,"line_start":279,"line_end":279,"column_start":5,"column_end":14},"name":"EmptyLook","qualname":"::prog::Inst::EmptyLook","value":"Inst::EmptyLook(InstEmptyLook)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" EmptyLook represents a zero-width assertion in a regex program. A\n zero-width assertion does not consume any of the input text.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484292},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":265410,"byte_end":265414,"line_start":282,"line_end":282,"column_start":5,"column_end":9},"name":"Char","qualname":"::prog::Inst::Char","value":"Inst::Char(InstChar)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" Char requires the regex program to match the character in InstChar at\n the current position in the input.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484294},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":265588,"byte_end":265594,"line_start":285,"line_end":285,"column_start":5,"column_end":11},"name":"Ranges","qualname":"::prog::Inst::Ranges","value":"Inst::Ranges(InstRanges)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" Ranges requires the regex program to match the character at the current\n position in the input with one of the ranges specified in InstRanges.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484296},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":265792,"byte_end":265797,"line_start":289,"line_end":289,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::prog::Inst::Bytes","value":"Inst::Bytes(InstBytes)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" Bytes is like Ranges, except it expresses a single byte range. It is\n used in conjunction with Split instructions to implement multi-byte\n character classes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1222},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":264391,"byte_end":264395,"line_start":262,"line_end":262,"column_start":10,"column_end":14},"name":"Inst","qualname":"::prog::Inst","value":"Inst::{Match, Save, Split, EmptyLook, Char, Ranges, Bytes}","parent":null,"children":[{"krate":0,"index":2147484284},{"krate":0,"index":2147484286},{"krate":0,"index":2147484288},{"krate":0,"index":2147484290},{"krate":0,"index":2147484292},{"krate":0,"index":2147484294},{"krate":0,"index":2147484296}],"decl_id":null,"docs":" Inst is an instruction code in a Regex program.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":265901,"byte_end":265909,"line_start":294,"line_end":294,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Inst>::is_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":266107,"byte_end":266115,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"InstSave","qualname":"::prog::InstSave","value":"InstSave { goto, slot }","parent":null,"children":[{"krate":0,"index":2147484298},{"krate":0,"index":2147484299}],"decl_id":null,"docs":" Representation of the Save instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484298},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":266179,"byte_end":266183,"line_start":306,"line_end":306,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstSave::goto","value":"usize","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The next location to execute in the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484299},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":266338,"byte_end":266342,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"name":"slot","qualname":"::prog::InstSave::slot","value":"usize","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The capture slot (there are two slots for every capture in a regex,\n including the zeroth capture for the entire match).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1232},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":266434,"byte_end":266443,"line_start":314,"line_end":314,"column_start":12,"column_end":21},"name":"InstSplit","qualname":"::prog::InstSplit","value":"InstSplit { goto1, goto2 }","parent":null,"children":[{"krate":0,"index":2147484300},{"krate":0,"index":2147484301}],"decl_id":null,"docs":" Representation of the Split instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484300},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":266599,"byte_end":266604,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"goto1","qualname":"::prog::InstSplit::goto1","value":"usize","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" The first instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484301},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":266769,"byte_end":266774,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"name":"goto2","qualname":"::prog::InstSplit::goto2","value":"usize","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" The second instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1237},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":266872,"byte_end":266885,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"InstEmptyLook","qualname":"::prog::InstEmptyLook","value":"InstEmptyLook { goto, look }","parent":null,"children":[{"krate":0,"index":2147484302},{"krate":0,"index":2147484303}],"decl_id":null,"docs":" Representation of the EmptyLook instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484302},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":266986,"byte_end":266990,"line_start":328,"line_end":328,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstEmptyLook::goto","value":"usize","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484303},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267060,"byte_end":267064,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"name":"look","qualname":"::prog::InstEmptyLook::look","value":"prog::EmptyLook","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The type of zero-width assertion to check.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484304},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267228,"byte_end":267237,"line_start":337,"line_end":337,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::prog::EmptyLook::StartLine","value":"EmptyLook::StartLine","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" Start of line or input.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484305},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267273,"byte_end":267280,"line_start":339,"line_end":339,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::prog::EmptyLook::EndLine","value":"EmptyLook::EndLine","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" End of line or input.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484306},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267310,"byte_end":267319,"line_start":341,"line_end":341,"column_start":5,"column_end":14},"name":"StartText","qualname":"::prog::EmptyLook::StartText","value":"EmptyLook::StartText","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" Start of input.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484307},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267347,"byte_end":267354,"line_start":343,"line_end":343,"column_start":5,"column_end":12},"name":"EndText","qualname":"::prog::EmptyLook::EndText","value":"EmptyLook::EndText","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" End of input.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484308},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267428,"byte_end":267440,"line_start":345,"line_end":345,"column_start":5,"column_end":17},"name":"WordBoundary","qualname":"::prog::EmptyLook::WordBoundary","value":"EmptyLook::WordBoundary","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" Word character on one side and non-word character on other.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484309},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267520,"byte_end":267535,"line_start":347,"line_end":347,"column_start":5,"column_end":20},"name":"NotWordBoundary","qualname":"::prog::EmptyLook::NotWordBoundary","value":"EmptyLook::NotWordBoundary","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" Word character on both sides or non-word character on both sides.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484310},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267570,"byte_end":267587,"line_start":349,"line_end":349,"column_start":5,"column_end":22},"name":"WordBoundaryAscii","qualname":"::prog::EmptyLook::WordBoundaryAscii","value":"EmptyLook::WordBoundaryAscii","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484311},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267626,"byte_end":267646,"line_start":351,"line_end":351,"column_start":5,"column_end":25},"name":"NotWordBoundaryAscii","qualname":"::prog::EmptyLook::NotWordBoundaryAscii","value":"EmptyLook::NotWordBoundaryAscii","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" Not ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1242},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267180,"byte_end":267189,"line_start":335,"line_end":335,"column_start":10,"column_end":19},"name":"EmptyLook","qualname":"::prog::EmptyLook","value":"EmptyLook::{StartLine, EndLine, StartText, EndText, WordBoundary, NotWordBoundary, WordBoundaryAscii, NotWordBoundaryAscii}","parent":null,"children":[{"krate":0,"index":2147484304},{"krate":0,"index":2147484305},{"krate":0,"index":2147484306},{"krate":0,"index":2147484307},{"krate":0,"index":2147484308},{"krate":0,"index":2147484309},{"krate":0,"index":2147484310},{"krate":0,"index":2147484311}],"decl_id":null,"docs":" The set of zero-width match instructions.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267171,"byte_end":267649,"line_start":335,"line_end":352,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267171,"byte_end":267649,"line_start":335,"line_end":352,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1252},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267730,"byte_end":267738,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"InstChar","qualname":"::prog::InstChar","value":"InstChar { goto, c }","parent":null,"children":[{"krate":0,"index":2147484312},{"krate":0,"index":2147484313}],"decl_id":null,"docs":" Representation of the Char instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484312},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267839,"byte_end":267843,"line_start":359,"line_end":359,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstChar::goto","value":"usize","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484313},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267893,"byte_end":267894,"line_start":361,"line_end":361,"column_start":9,"column_end":10},"name":"c","qualname":"::prog::InstChar::c","value":"char","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":" The character to test.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1257},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":267986,"byte_end":267996,"line_start":366,"line_end":366,"column_start":12,"column_end":22},"name":"InstRanges","qualname":"::prog::InstRanges","value":"InstRanges { goto, ranges }","parent":null,"children":[{"krate":0,"index":2147484314},{"krate":0,"index":2147484315}],"decl_id":null,"docs":" Representation of the Ranges instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484314},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":268097,"byte_end":268101,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstRanges::goto","value":"usize","parent":{"krate":0,"index":1257},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484315},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":268176,"byte_end":268182,"line_start":371,"line_end":371,"column_start":9,"column_end":15},"name":"ranges","qualname":"::prog::InstRanges::ranges","value":"std::vec::Vec<(char, char)>","parent":{"krate":0,"index":1257},"children":[],"decl_id":null,"docs":" The set of Unicode scalar value ranges to test.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":268309,"byte_end":268316,"line_start":376,"line_end":376,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstRanges>::matches","value":"fn (&self, c: Char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":269102,"byte_end":269111,"line_start":401,"line_end":401,"column_start":12,"column_end":21},"name":"num_chars","qualname":"<InstRanges>::num_chars","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1262},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":269366,"byte_end":269375,"line_start":411,"line_end":411,"column_start":12,"column_end":21},"name":"InstBytes","qualname":"::prog::InstBytes","value":"InstBytes { goto, start, end }","parent":null,"children":[{"krate":0,"index":2147484316},{"krate":0,"index":2147484317},{"krate":0,"index":2147484318}],"decl_id":null,"docs":" Representation of the Bytes instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484316},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":269476,"byte_end":269480,"line_start":414,"line_end":414,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstBytes::goto","value":"usize","parent":{"krate":0,"index":1262},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484317},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":269549,"byte_end":269554,"line_start":416,"line_end":416,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::InstBytes::start","value":"u8","parent":{"krate":0,"index":1262},"children":[],"decl_id":null,"docs":" The start (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484318},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":269616,"byte_end":269619,"line_start":418,"line_end":418,"column_start":9,"column_end":12},"name":"end","qualname":"::prog::InstBytes::end","value":"u8","parent":{"krate":0,"index":1262},"children":[],"decl_id":null,"docs":" The end (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":269725,"byte_end":269732,"line_start":423,"line_end":423,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstBytes>::matches","value":"fn (&self, byte: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1267},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270423,"byte_end":270435,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"RegexOptions","qualname":"::re_builder::RegexOptions","value":"RegexOptions { pats, size_limit, dfa_size_limit, case_insensitive, multi_line, dot_matches_new_line, swap_greed, ignore_whitespace, unicode }","parent":null,"children":[{"krate":0,"index":2147484319},{"krate":0,"index":2147484320},{"krate":0,"index":2147484321},{"krate":0,"index":2147484322},{"krate":0,"index":2147484323},{"krate":0,"index":2147484324},{"krate":0,"index":2147484325},{"krate":0,"index":2147484326},{"krate":0,"index":2147484327}],"decl_id":null,"docs":" The set of user configurable options for compiling zero or more regexes.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270389,"byte_end":270411,"line_start":13,"line_end":13,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2147484319},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270446,"byte_end":270450,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"pats","qualname":"::re_builder::RegexOptions::pats","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484320},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270473,"byte_end":270483,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"size_limit","qualname":"::re_builder::RegexOptions::size_limit","value":"usize","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484321},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270500,"byte_end":270514,"line_start":17,"line_end":17,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::re_builder::RegexOptions::dfa_size_limit","value":"usize","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484322},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270531,"byte_end":270547,"line_start":18,"line_end":18,"column_start":9,"column_end":25},"name":"case_insensitive","qualname":"::re_builder::RegexOptions::case_insensitive","value":"bool","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484323},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270563,"byte_end":270573,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"multi_line","qualname":"::re_builder::RegexOptions::multi_line","value":"bool","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484324},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270589,"byte_end":270609,"line_start":20,"line_end":20,"column_start":9,"column_end":29},"name":"dot_matches_new_line","qualname":"::re_builder::RegexOptions::dot_matches_new_line","value":"bool","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484325},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270625,"byte_end":270635,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"name":"swap_greed","qualname":"::re_builder::RegexOptions::swap_greed","value":"bool","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484326},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270651,"byte_end":270668,"line_start":22,"line_end":22,"column_start":9,"column_end":26},"name":"ignore_whitespace","qualname":"::re_builder::RegexOptions::ignore_whitespace","value":"bool","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484327},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270684,"byte_end":270691,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"unicode","qualname":"::re_builder::RegexOptions::unicode","value":"bool","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1340},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":279855,"byte_end":279860,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_bytes::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":2147484340},{"krate":0,"index":2147484341},{"krate":0,"index":2147484342}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":279844,"byte_end":279922,"line_start":30,"line_end":34,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":279844,"byte_end":279922,"line_start":30,"line_end":34,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":280041,"byte_end":280046,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"start","qualname":"<Match<'t>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":280185,"byte_end":280188,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"end","qualname":"<Match<'t>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":280290,"byte_end":280298,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Match<'t>>::as_bytes","value":"fn (&self) -> &'t [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":281312,"byte_end":281317,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_bytes::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":282376,"byte_end":282379,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":283110,"byte_end":283118,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":283980,"byte_end":283984,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t, > (&self, text: &'t [u8]) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":284700,"byte_end":284709,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":287715,"byte_end":287723,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t, > (&self, text: &'t [u8]) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":289153,"byte_end":289166,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":290084,"byte_end":290089,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":291105,"byte_end":291111,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't, > (&'r self, text: &'t [u8], limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":295894,"byte_end":295901,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":296358,"byte_end":296369,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":296838,"byte_end":296846,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t [u8], limit: usize, mut rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":299277,"byte_end":299291,"line_start":560,"line_end":560,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":299698,"byte_end":299715,"line_start":571,"line_end":571,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &[u8], start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":300178,"byte_end":300189,"line_start":586,"line_end":586,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":300605,"byte_end":300612,"line_start":597,"line_end":597,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t, > (&self, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":301168,"byte_end":301184,"line_start":613,"line_end":613,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t, > (&self, locs: &mut Locations, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":301529,"byte_end":301535,"line_start":627,"line_end":627,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":301658,"byte_end":301671,"line_start":632,"line_end":632,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":301807,"byte_end":301819,"line_start":637,"line_end":637,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":302019,"byte_end":302028,"line_start":644,"line_end":644,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> Locations","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":302493,"byte_end":302500,"line_start":657,"line_end":657,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_bytes::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":303073,"byte_end":303087,"line_start":675,"line_end":675,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_bytes::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":684},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":303668,"byte_end":303673,"line_start":693,"line_end":693,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_bytes::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":2147483828},{"krate":0,"index":2147483829}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":688},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":304656,"byte_end":304662,"line_start":728,"line_end":728,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_bytes::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":2147483834},{"krate":0,"index":2147483835}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":305357,"byte_end":305369,"line_start":756,"line_end":756,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_bytes::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":697},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":306293,"byte_end":306301,"line_start":782,"line_end":782,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_bytes::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":2147483846},{"krate":0,"index":2147483847},{"krate":0,"index":2147483848}],"decl_id":null,"docs":" Captures represents a group of captured byte strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":307226,"byte_end":307229,"line_start":808,"line_end":808,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures<'t>>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":307514,"byte_end":307518,"line_start":814,"line_end":814,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures<'t>>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":307950,"byte_end":307954,"line_start":823,"line_end":823,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures<'t>>::iter","value":"fn <'c, > (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":308991,"byte_end":308997,"line_start":846,"line_end":846,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures<'t>>::expand","value":"fn (&self, replacement: &[u8], dst: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":309308,"byte_end":309311,"line_start":855,"line_end":855,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures<'t>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":312445,"byte_end":312462,"line_start":952,"line_end":952,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_bytes::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":2147483871},{"krate":0,"index":2147483872}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":722},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":313095,"byte_end":313103,"line_start":972,"line_end":972,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_bytes::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":313389,"byte_end":313403,"line_start":980,"line_end":980,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_bytes::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":313814,"byte_end":313826,"line_start":989,"line_end":989,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_bytes::Replacer::no_expansion","value":"fn <'r, > (&'r mut self) -> Option<Cow<'r, [u8]>>","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":314841,"byte_end":314849,"line_start":1021,"line_end":1021,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_bytes::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" NoExpand indicates literal byte string replacement.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,112,108,117,103,105,110,46,114,115],"byte_start":315887,"byte_end":315893,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"Plugin","qualname":"::re_plugin::Plugin","value":"Plugin { original, names, groups, prog }","parent":null,"children":[{"krate":0,"index":2147483888},{"krate":0,"index":2147483889},{"krate":0,"index":2147483890},{"krate":0,"index":2147483891}],"decl_id":null,"docs":" Plugin is the compiler plugin's data structure. It declare some static\n data (like capture groups and the original regex string), but defines its\n matching engine as a simple function.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147483888},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,112,108,117,103,105,110,46,114,115],"byte_start":315923,"byte_end":315931,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"name":"original","qualname":"::re_plugin::Plugin::original","value":"&'static str","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147483889},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,112,108,117,103,105,110,46,114,115],"byte_start":315974,"byte_end":315979,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"names","qualname":"::re_plugin::Plugin::names","value":"&'static &'static [std::option::Option<&'static str>]","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147483890},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,112,108,117,103,105,110,46,114,115],"byte_start":316050,"byte_end":316056,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"groups","qualname":"::re_plugin::Plugin::groups","value":"&'static &'static [(&'static str, usize)]","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147483891},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,112,108,117,103,105,110,46,114,115],"byte_start":316128,"byte_end":316132,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"prog","qualname":"::re_plugin::Plugin::prog","value":"for<'r, 's> fn(&'r mut [std::option::Option<usize>], &'s str, usize) -> bool","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":755},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":332298,"byte_end":332302,"line_start":14,"line_end":14,"column_start":10,"column_end":14},"name":"Slot","qualname":"::re_trait::Slot","value":"Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Slot is a single saved capture location. Note that there are two slots for\n every capture in a regular expression (one slot each for the start and end\n of the capture).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":756},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":332511,"byte_end":332520,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Locations","qualname":"::re_trait::Locations","value":"","parent":null,"children":[],"decl_id":null,"docs":" Locations represents the offsets of each capturing group in a regex for\n a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":332849,"byte_end":332852,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"pos","qualname":"<Locations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":333296,"byte_end":333300,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"iter","qualname":"<Locations>::iter","value":"fn (&self) -> SubCapturesPosIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":333596,"byte_end":333599,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<Locations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":761},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":333778,"byte_end":333786,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"as_slots","qualname":"::re_trait::as_slots","value":"fn (locs: &mut Locations) -> &mut [Slot]","parent":null,"children":[],"decl_id":null,"docs":" This is a hack to make Locations -> &mut [Slot] be available internally\n without exposing it in the public API.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":334075,"byte_end":334093,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"SubCapturesPosIter","qualname":"::re_trait::SubCapturesPosIter","value":"SubCapturesPosIter {  }","parent":null,"children":[{"krate":0,"index":2147483896},{"krate":0,"index":2147483897}],"decl_id":null,"docs":" An iterator over capture group positions for a particular match of a\n regular expression.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":766},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":335294,"byte_end":335311,"line_start":99,"line_end":99,"column_start":11,"column_end":28},"name":"RegularExpression","qualname":"::re_trait::RegularExpression","value":"RegularExpression:  Sized","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":767},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":335364,"byte_end":335368,"line_start":101,"line_end":101,"column_start":10,"column_end":14},"name":"Text","qualname":"::re_trait::RegularExpression::Text","value":"type Text: ?Sized;","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" The type of the haystack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":335543,"byte_end":335552,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"slots_len","qualname":"::re_trait::RegularExpression::slots_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":335648,"byte_end":335657,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"locations","qualname":"::re_trait::RegularExpression::locations","value":"fn (&self) -> Locations","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":336003,"byte_end":336019,"line_start":117,"line_end":117,"column_start":8,"column_end":24},"name":"next_after_empty","qualname":"::re_trait::RegularExpression::next_after_empty","value":"fn (&self, text: &Self::Text, i: usize) -> usize","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":336126,"byte_end":336143,"line_start":120,"line_end":120,"column_start":8,"column_end":25},"name":"shortest_match_at","qualname":"::re_trait::RegularExpression::shortest_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<usize>","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":336299,"byte_end":336310,"line_start":127,"line_end":127,"column_start":8,"column_end":19},"name":"is_match_at","qualname":"::re_trait::RegularExpression::is_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> bool","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":336464,"byte_end":336471,"line_start":134,"line_end":134,"column_start":8,"column_end":15},"name":"find_at","qualname":"::re_trait::RegularExpression::find_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":336706,"byte_end":336722,"line_start":142,"line_end":142,"column_start":8,"column_end":24},"name":"read_captures_at","qualname":"::re_trait::RegularExpression::read_captures_at","value":"fn (&self, locs: &mut Locations, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":336955,"byte_end":336964,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"find_iter","qualname":"::re_trait::RegularExpression::find_iter","value":"fn <'t, > (self, text: &'t Self::Text) -> Matches<'t, Self>","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":337296,"byte_end":337309,"line_start":165,"line_end":165,"column_start":8,"column_end":21},"name":"captures_iter","qualname":"::re_trait::RegularExpression::captures_iter","value":"fn <'t, > (self, text: &'t Self::Text) -> CaptureMatches<'t, Self>","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" RegularExpression describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":337536,"byte_end":337543,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_trait::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":2147483902},{"krate":0,"index":2147483903},{"krate":0,"index":2147483904},{"krate":0,"index":2147483905}],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":337802,"byte_end":337806,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"text","qualname":"<Matches<'t, R>>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":337904,"byte_end":337909,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"regex","qualname":"<Matches<'t, R>>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":784},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":339110,"byte_end":339124,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_trait::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches with\n captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":339321,"byte_end":339325,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"text","qualname":"<CaptureMatches<'t, R>>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":339427,"byte_end":339432,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"regex","qualname":"<CaptureMatches<'t, R>>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":812},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":341348,"byte_end":341354,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"escape","qualname":"::re_unicode::escape","value":"fn (text: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escapes all regular expression meta characters in `text`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1468},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":341605,"byte_end":341610,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_unicode::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":2147484381},{"krate":0,"index":2147484382},{"krate":0,"index":2147484383}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":341594,"byte_end":341671,"line_start":40,"line_end":44,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":341594,"byte_end":341671,"line_start":40,"line_end":44,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":341790,"byte_end":341795,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"start","qualname":"<Match<'t>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":341934,"byte_end":341937,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"end","qualname":"<Match<'t>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":342039,"byte_end":342045,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Match<'t>>::as_str","value":"fn (&self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":344644,"byte_end":344649,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_unicode::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching Unicode strings.","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484392},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":345005,"byte_end":345012,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::re_unicode::_Regex::Dynamic","value":"_Regex::Dynamic(Exec)","parent":{"krate":0,"index":1482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147484394},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":345043,"byte_end":345049,"line_start":145,"line_end":145,"column_start":5,"column_end":11},"name":"Plugin","qualname":"::re_unicode::_Regex::Plugin","value":"_Regex::Plugin(Plugin)","parent":{"krate":0,"index":1482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1482},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":344720,"byte_end":344726,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"_Regex","qualname":"::re_unicode::_Regex","value":"_Regex::{Dynamic, Plugin}","parent":null,"children":[{"krate":0,"index":2147484392},{"krate":0,"index":2147484394}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":346012,"byte_end":346015,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":346745,"byte_end":346753,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":347629,"byte_end":347633,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t, > (&self, text: &'t str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":348347,"byte_end":348356,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't, > (&'r self, text: &'t str) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":351692,"byte_end":351700,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t, > (&self, text: &'t str) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":353013,"byte_end":353026,"line_start":363,"line_end":363,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't, > (&'r self, text: &'t str) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":354211,"byte_end":354216,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't, > (&'r self, text: &'t str) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":355204,"byte_end":355210,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't, > (&'r self, text: &'t str, limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":359747,"byte_end":359754,"line_start":536,"line_end":536,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":360211,"byte_end":360222,"line_start":550,"line_end":550,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":360691,"byte_end":360699,"line_start":564,"line_end":564,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t str, limit: usize, mut rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":363611,"byte_end":363625,"line_start":643,"line_end":643,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364031,"byte_end":364048,"line_start":654,"line_end":654,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &str, start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364687,"byte_end":364698,"line_start":674,"line_end":674,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &str, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":365113,"byte_end":365120,"line_start":685,"line_end":685,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t, > (&self, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":365937,"byte_end":365953,"line_start":709,"line_end":709,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t, > (&self, locs: &mut Locations, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":366576,"byte_end":366582,"line_start":731,"line_end":731,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":366826,"byte_end":366839,"line_start":739,"line_end":739,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367165,"byte_end":367177,"line_start":749,"line_end":749,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367487,"byte_end":367496,"line_start":759,"line_end":759,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> Locations","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":850},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367981,"byte_end":367993,"line_start":775,"line_end":775,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_unicode::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":856},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":368942,"byte_end":368947,"line_start":806,"line_end":806,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_unicode::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":2147483955},{"krate":0,"index":2147483956}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":369921,"byte_end":369927,"line_start":841,"line_end":841,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_unicode::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":2147483961},{"krate":0,"index":2147483962}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":372474,"byte_end":372482,"line_start":927,"line_end":927,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_unicode::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":2147483983},{"krate":0,"index":2147483984},{"krate":0,"index":2147483985}],"decl_id":null,"docs":" Captures represents a group of captured strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":373354,"byte_end":373357,"line_start":953,"line_end":953,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures<'t>>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":373642,"byte_end":373646,"line_start":959,"line_end":959,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures<'t>>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":374077,"byte_end":374081,"line_start":968,"line_end":968,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures<'t>>::iter","value":"fn <'c, > (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":375118,"byte_end":375124,"line_start":991,"line_end":991,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures<'t>>::expand","value":"fn (&self, replacement: &str, dst: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":375431,"byte_end":375434,"line_start":1000,"line_end":1000,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures<'t>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":891},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":378112,"byte_end":378129,"line_start":1082,"line_end":1082,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_unicode::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":2147484008},{"krate":0,"index":2147484009}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":895},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":378756,"byte_end":378770,"line_start":1103,"line_end":1103,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_unicode::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":380056,"byte_end":380063,"line_start":1141,"line_end":1141,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_unicode::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":907},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381181,"byte_end":381189,"line_start":1178,"line_end":1178,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_unicode::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381496,"byte_end":381510,"line_start":1186,"line_end":1186,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_unicode::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut String) -> ()","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381915,"byte_end":381927,"line_start":1195,"line_end":1195,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_unicode::Replacer::no_expansion","value":"fn <'r, > (&'r mut self) -> Option<Cow<'r, str>>","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":915},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":382927,"byte_end":382935,"line_start":1227,"line_end":1227,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_unicode::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" NoExpand indicates literal string replacement.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":920},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"teddy128","qualname":"::simd_accel::teddy128","value":".cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/simd_fallback/teddy128.rs","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1486},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1491},{"krate":0,"index":923}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":922},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383244,"byte_end":383266,"line_start":3,"line_end":3,"column_start":8,"column_end":30},"name":"is_teddy_128_available","qualname":"::simd_accel::teddy128::is_teddy_128_available","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1485},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383327,"byte_end":383332,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Teddy","qualname":"::simd_accel::teddy128::Teddy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1490},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383374,"byte_end":383379,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Match","qualname":"::simd_accel::teddy128::Match","value":"Match { pat, start, end }","parent":null,"children":[{"krate":0,"index":2147484398},{"krate":0,"index":2147484399},{"krate":0,"index":2147484400}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484398},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383390,"byte_end":383393,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"pat","qualname":"::simd_accel::teddy128::Match::pat","value":"usize","parent":{"krate":0,"index":1490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484399},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383410,"byte_end":383415,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"start","qualname":"::simd_accel::teddy128::Match::start","value":"usize","parent":{"krate":0,"index":1490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484400},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383432,"byte_end":383435,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"end","qualname":"::simd_accel::teddy128::Match::end","value":"usize","parent":{"krate":0,"index":1490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383471,"byte_end":383474,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Teddy>::new","value":"fn (_pats: &syntax::Literals) -> Option<Teddy>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383538,"byte_end":383546,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"patterns","qualname":"<Teddy>::patterns","value":"fn (&self) -> &[Vec<u8>]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383587,"byte_end":383590,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"len","qualname":"<Teddy>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383624,"byte_end":383640,"line_start":21,"line_end":21,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Teddy>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383674,"byte_end":383678,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"find","qualname":"<Teddy>::find","value":"fn (&self, _haystack: &[u8]) -> Option<Match>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":384353,"byte_end":384362,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"SparseSet","qualname":"::sparse::SparseSet","value":"SparseSet {  }","parent":null,"children":[{"krate":0,"index":2147484401},{"krate":0,"index":2147484402},{"krate":0,"index":2147484403}],"decl_id":null,"docs":" A sparse set used for representing ordered NFA states.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":384836,"byte_end":384839,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<SparseSet>::new","value":"fn (size: usize) -> SparseSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":385006,"byte_end":385009,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"len","qualname":"<SparseSet>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":385064,"byte_end":385072,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SparseSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":385131,"byte_end":385139,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SparseSet>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":385201,"byte_end":385207,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"insert","qualname":"<SparseSet>::insert","value":"fn (&mut self, value: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":385367,"byte_end":385375,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"contains","qualname":"<SparseSet>::contains","value":"fn (&self, value: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":385509,"byte_end":385514,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"clear","qualname":"<SparseSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":947},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21814,"byte_end":21822,"line_start":640,"line_end":640,"column_start":9,"column_end":17},"name":"internal","qualname":"::internal","value":".cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"decl_id":null,"docs":" The `internal` module exists to support the `regex!` macro and other\n suspicious activity, such as testing different matching engines and\n supporting the `regex-debug` CLI utility.\n","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,109,111,100,46,114,115],"byte_start":383213,"byte_end":383221,"line_start":1,"line_end":1,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":920}}],"macro_refs":[],"relations":[{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":24845,"byte_end":24850,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25512,"byte_end":25519,"line_start":89,"line_end":89,"column_start":32,"column_end":39},"kind":"Impl","from":{"krate":0,"index":965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":44390,"byte_end":44398,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":"Impl","from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":68598,"byte_end":68607,"line_start":732,"line_end":732,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":70784,"byte_end":70792,"line_start":795,"line_end":795,"column_start":6,"column_end":14},"kind":"Impl","from":{"krate":0,"index":990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":71713,"byte_end":71725,"line_start":828,"line_end":828,"column_start":14,"column_end":26},"kind":"Impl","from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":76603,"byte_end":76614,"line_start":960,"line_end":960,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":77813,"byte_end":77825,"line_start":1001,"line_end":1001,"column_start":6,"column_end":18},"kind":"Impl","from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":90590,"byte_end":90596,"line_start":224,"line_end":224,"column_start":9,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":92887,"byte_end":92895,"line_start":295,"line_end":295,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":182},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":93317,"byte_end":93322,"line_start":312,"line_end":312,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":97539,"byte_end":97544,"line_start":421,"line_end":421,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":98333,"byte_end":98343,"line_start":445,"line_end":445,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":98647,"byte_end":98650,"line_start":455,"line_end":455,"column_start":10,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":145682,"byte_end":145693,"line_start":1586,"line_end":1586,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":147554,"byte_end":147564,"line_start":1643,"line_end":1643,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":148000,"byte_end":148004,"line_start":1669,"line_end":1669,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":148580,"byte_end":148585,"line_start":1694,"line_end":1694,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1046},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":148856,"byte_end":148867,"line_start":1704,"line_end":1704,"column_start":21,"column_end":32},"kind":"Impl","from":{"krate":0,"index":1035},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":149289,"byte_end":149303,"line_start":1718,"line_end":1718,"column_start":25,"column_end":39},"kind":"Impl","from":{"krate":0,"index":258},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,100,102,97,46,114,115],"byte_start":149809,"byte_end":149819,"line_start":1736,"line_end":1736,"column_start":21,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1077},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":154897,"byte_end":154902,"line_start":32,"line_end":32,"column_start":30,"column_end":35},"kind":"Impl","from":{"krate":0,"index":1090},"to":{"krate":1,"index":1280}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":155243,"byte_end":155248,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1090},"to":{"krate":2,"index":3442}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":155650,"byte_end":155655,"line_start":59,"line_end":59,"column_start":30,"column_end":35},"kind":"Impl","from":{"krate":0,"index":1090},"to":{"krate":2,"index":1210}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":159613,"byte_end":159624,"line_start":111,"line_end":111,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":167988,"byte_end":168001,"line_start":330,"line_end":330,"column_start":32,"column_end":45},"kind":"Impl","from":{"krate":0,"index":312},"to":{"krate":0,"index":766}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":169039,"byte_end":169049,"line_start":365,"line_end":365,"column_start":32,"column_end":42},"kind":"Impl","from":{"krate":0,"index":1093},"to":{"krate":0,"index":766}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":178058,"byte_end":178068,"line_start":594,"line_end":594,"column_start":10,"column_end":20},"kind":"Impl","from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":192694,"byte_end":192707,"line_start":1053,"line_end":1053,"column_start":10,"column_end":23},"kind":"Impl","from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":192831,"byte_end":192835,"line_start":1059,"line_end":1059,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":194664,"byte_end":194668,"line_start":1116,"line_end":1116,"column_start":16,"column_end":20},"kind":"Impl","from":{"krate":0,"index":311},"to":{"krate":2,"index":1191}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":194818,"byte_end":194830,"line_start":1125,"line_end":1125,"column_start":6,"column_end":18},"kind":"Impl","from":{"krate":0,"index":1096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":200178,"byte_end":200195,"line_start":1266,"line_end":1266,"column_start":6,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,112,97,110,100,46,114,115],"byte_start":203636,"byte_end":203639,"line_start":112,"line_end":112,"column_start":28,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1133},"to":{"krate":2,"index":1210}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,101,120,112,97,110,100,46,114,115],"byte_start":203735,"byte_end":203738,"line_start":118,"line_end":118,"column_start":22,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1133},"to":{"krate":2,"index":1210}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":212368,"byte_end":212375,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215194,"byte_end":215203,"line_start":133,"line_end":133,"column_start":10,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215377,"byte_end":215386,"line_start":140,"line_end":140,"column_start":25,"column_end":34},"kind":"Impl","from":{"krate":0,"index":1150},"to":{"krate":2,"index":929}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215492,"byte_end":215501,"line_start":148,"line_end":148,"column_start":20,"column_end":29},"kind":"Impl","from":{"krate":0,"index":1150},"to":{"krate":0,"index":428}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217799,"byte_end":217808,"line_start":227,"line_end":227,"column_start":10,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":218070,"byte_end":218079,"line_start":237,"line_end":237,"column_start":25,"column_end":34},"kind":"Impl","from":{"krate":0,"index":1156},"to":{"krate":2,"index":929}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":218188,"byte_end":218197,"line_start":245,"line_end":245,"column_start":20,"column_end":29},"kind":"Impl","from":{"krate":0,"index":1156},"to":{"krate":0,"index":428}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221447,"byte_end":221451,"line_start":343,"line_end":343,"column_start":21,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221661,"byte_end":221665,"line_start":352,"line_end":352,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":222991,"byte_end":222995,"line_start":393,"line_end":393,"column_start":21,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":2,"index":1210}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":223077,"byte_end":223081,"line_start":397,"line_end":397,"column_start":29,"column_end":33},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":2,"index":1210}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":223204,"byte_end":223208,"line_start":403,"line_end":403,"column_start":26,"column_end":30},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":2,"index":1097}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":223437,"byte_end":223441,"line_start":413,"line_end":413,"column_start":27,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":2,"index":1124}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":225861,"byte_end":225876,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":"Impl","from":{"krate":0,"index":1181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":230421,"byte_end":230428,"line_start":190,"line_end":190,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232868,"byte_end":232879,"line_start":253,"line_end":253,"column_start":23,"column_end":34},"kind":"Impl","from":{"krate":0,"index":530},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":234304,"byte_end":234317,"line_start":307,"line_end":307,"column_start":6,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":238467,"byte_end":238479,"line_start":421,"line_end":421,"column_start":6,"column_end":18},"kind":"Impl","from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":244360,"byte_end":244365,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":244659,"byte_end":244662,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":253794,"byte_end":253801,"line_start":355,"line_end":355,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":257616,"byte_end":257623,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":260577,"byte_end":260584,"line_start":161,"line_end":161,"column_start":16,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1219},"to":{"krate":2,"index":929}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":260703,"byte_end":260710,"line_start":169,"line_end":169,"column_start":21,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1219},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":265818,"byte_end":265822,"line_start":292,"line_end":292,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":268211,"byte_end":268221,"line_start":374,"line_end":374,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":269633,"byte_end":269642,"line_start":421,"line_end":421,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":270719,"byte_end":270731,"line_start":26,"line_end":26,"column_start":18,"column_end":30},"kind":"Impl","from":{"krate":0,"index":1267},"to":{"krate":2,"index":1197}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":279933,"byte_end":279938,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":281348,"byte_end":281353,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1351},"to":{"krate":2,"index":3442}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":281530,"byte_end":281535,"line_start":87,"line_end":87,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1351},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":281840,"byte_end":281845,"line_start":98,"line_end":98,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1351},"to":{"krate":2,"index":1210}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":281929,"byte_end":281934,"line_start":104,"line_end":104,"column_start":18,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1351},"to":{"krate":2,"index":2867}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":282145,"byte_end":282150,"line_start":114,"line_end":114,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":298476,"byte_end":298481,"line_start":538,"line_end":538,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":301459,"byte_end":301464,"line_start":625,"line_end":625,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":302576,"byte_end":302583,"line_start":659,"line_end":659,"column_start":27,"column_end":34},"kind":"Impl","from":{"krate":0,"index":676},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":303170,"byte_end":303184,"line_start":677,"line_end":677,"column_start":27,"column_end":41},"kind":"Impl","from":{"krate":0,"index":680},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":303759,"byte_end":303764,"line_start":698,"line_end":698,"column_start":27,"column_end":32},"kind":"Impl","from":{"krate":0,"index":684},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":304743,"byte_end":304749,"line_start":733,"line_end":733,"column_start":27,"column_end":33},"kind":"Impl","from":{"krate":0,"index":688},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":305438,"byte_end":305450,"line_start":758,"line_end":758,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":692},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":306408,"byte_end":306416,"line_start":788,"line_end":788,"column_start":10,"column_end":18},"kind":"Impl","from":{"krate":0,"index":697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":309387,"byte_end":309395,"line_start":860,"line_end":860,"column_start":25,"column_end":33},"kind":"Impl","from":{"krate":0,"index":697},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":309622,"byte_end":309635,"line_start":868,"line_end":868,"column_start":29,"column_end":42},"kind":"Impl","from":{"krate":0,"index":706},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":311130,"byte_end":311138,"line_start":913,"line_end":913,"column_start":27,"column_end":35},"kind":"Impl","from":{"krate":0,"index":697},"to":{"krate":2,"index":976}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":311774,"byte_end":311782,"line_start":934,"line_end":934,"column_start":33,"column_end":41},"kind":"Impl","from":{"krate":0,"index":697},"to":{"krate":2,"index":976}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":312566,"byte_end":312583,"line_start":957,"line_end":957,"column_start":27,"column_end":44},"kind":"Impl","from":{"krate":0,"index":718},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":314256,"byte_end":314257,"line_start":1007,"line_end":1007,"column_start":22,"column_end":23},"kind":"Impl","from":{"krate":0,"index":2147483882},"to":{"krate":0,"index":722}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":314892,"byte_end":314900,"line_start":1023,"line_end":1023,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":730},"to":{"krate":0,"index":722}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,112,108,117,103,105,110,46,114,115],"byte_start":316189,"byte_end":316195,"line_start":28,"line_end":28,"column_start":15,"column_end":21},"kind":"Impl","from":{"krate":0,"index":740},"to":{"krate":2,"index":821}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,112,108,117,103,105,110,46,114,115],"byte_start":316215,"byte_end":316221,"line_start":30,"line_end":30,"column_start":16,"column_end":22},"kind":"Impl","from":{"krate":0,"index":740},"to":{"krate":2,"index":1191}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,112,108,117,103,105,110,46,114,115],"byte_start":316306,"byte_end":316312,"line_start":36,"line_end":36,"column_start":28,"column_end":34},"kind":"Impl","from":{"krate":0,"index":740},"to":{"krate":0,"index":766}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":332539,"byte_end":332548,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":334166,"byte_end":334184,"line_start":69,"line_end":69,"column_start":23,"column_end":41},"kind":"Impl","from":{"krate":0,"index":762},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":335313,"byte_end":335318,"line_start":99,"line_end":99,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":766}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":337694,"byte_end":337701,"line_start":181,"line_end":181,"column_start":13,"column_end":20},"kind":"Impl","from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":337976,"byte_end":337983,"line_start":193,"line_end":193,"column_start":26,"column_end":33},"kind":"Impl","from":{"krate":0,"index":777},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":339206,"byte_end":339220,"line_start":228,"line_end":228,"column_start":13,"column_end":27},"kind":"Impl","from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":339505,"byte_end":339519,"line_start":240,"line_end":240,"column_start":26,"column_end":40},"kind":"Impl","from":{"krate":0,"index":784},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":341682,"byte_end":341687,"line_start":46,"line_end":46,"column_start":10,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":345084,"byte_end":345089,"line_start":148,"line_end":148,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1479},"to":{"krate":2,"index":3442}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":345266,"byte_end":345271,"line_start":155,"line_end":155,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1479},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":345459,"byte_end":345464,"line_start":163,"line_end":163,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1479},"to":{"krate":2,"index":1210}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":345565,"byte_end":345570,"line_start":169,"line_end":169,"column_start":18,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1479},"to":{"krate":2,"index":2867}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":345781,"byte_end":345786,"line_start":179,"line_end":179,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":362818,"byte_end":362823,"line_start":621,"line_end":621,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":366506,"byte_end":366511,"line_start":729,"line_end":729,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":368179,"byte_end":368191,"line_start":782,"line_end":782,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":850},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":369033,"byte_end":369038,"line_start":811,"line_end":811,"column_start":27,"column_end":32},"kind":"Impl","from":{"krate":0,"index":856},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":370008,"byte_end":370014,"line_start":846,"line_end":846,"column_start":27,"column_end":33},"kind":"Impl","from":{"krate":0,"index":860},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":370476,"byte_end":370487,"line_start":868,"line_end":868,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":371581,"byte_end":371596,"line_start":903,"line_end":903,"column_start":23,"column_end":38},"kind":"Impl","from":{"krate":0,"index":869},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":372572,"byte_end":372580,"line_start":933,"line_end":933,"column_start":10,"column_end":18},"kind":"Impl","from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":375510,"byte_end":375518,"line_start":1005,"line_end":1005,"column_start":25,"column_end":33},"kind":"Impl","from":{"krate":0,"index":873},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":375745,"byte_end":375758,"line_start":1013,"line_end":1013,"column_start":29,"column_end":42},"kind":"Impl","from":{"krate":0,"index":882},"to":{"krate":2,"index":3440}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":376805,"byte_end":376813,"line_start":1043,"line_end":1043,"column_start":27,"column_end":35},"kind":"Impl","from":{"krate":0,"index":873},"to":{"krate":2,"index":976}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":377445,"byte_end":377453,"line_start":1064,"line_end":1064,"column_start":33,"column_end":41},"kind":"Impl","from":{"krate":0,"index":873},"to":{"krate":2,"index":976}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":378233,"byte_end":378250,"line_start":1087,"line_end":1087,"column_start":27,"column_end":44},"kind":"Impl","from":{"krate":0,"index":891},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":378986,"byte_end":379000,"line_start":1110,"line_end":1110,"column_start":27,"column_end":41},"kind":"Impl","from":{"krate":0,"index":895},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":380238,"byte_end":380245,"line_start":1148,"line_end":1148,"column_start":14,"column_end":21},"kind":"Impl","from":{"krate":0,"index":900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":380467,"byte_end":380474,"line_start":1157,"line_end":1157,"column_start":27,"column_end":34},"kind":"Impl","from":{"krate":0,"index":900},"to":{"krate":2,"index":1657}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":382363,"byte_end":382364,"line_start":1213,"line_end":1213,"column_start":22,"column_end":23},"kind":"Impl","from":{"krate":0,"index":2147484049},"to":{"krate":0,"index":907}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":382977,"byte_end":382985,"line_start":1229,"line_end":1229,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":915},"to":{"krate":0,"index":907}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":383452,"byte_end":383457,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":384813,"byte_end":384822,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,50,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":385575,"byte_end":385584,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1495},"to":{"krate":2,"index":929}}]}